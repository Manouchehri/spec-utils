#!/bin/bash -x

#Препроцессинг с использованием исходников ядра

kdir="/home/work/workspace/linux-stable/"

gcc_preprocess="gcc -E -nostdinc
               -I .
               -I ${kdir}/arch/x86/include/
               -I ${kdir}/arch/x86/include/generated/
               -I ${kdir}/include/
               -I ${kdir}/include/generated/
               -I ${kdir}/arch/x86/include/uapi/
               -I ${kdir}/arch/x86/include/generated/uapi/
               -I ${kdir}/include/uapi/
               -I ${kdir}/include/generated/uapi/
               -isystem $(gcc -print-search-dirs | grep install | cut -d ':' -f 2)/include/"

include='^\s*#\s*include\s*["<][\w/\.-]+[">]'


#grab *.c from Makefile
flist="$(perl -e '
undef $/;
my $file=<>;
if ( $file =~ m/parsec-objs\s*:=\s*(((([\w-]+.o)|\\)\s+)+)/m )
{
   my $deps=$1;
   $deps =~ s/\\//g;
   $deps =~ s/\s+/ /g;
   $deps =~ s/([\w-]+).o/\1.c/g;
   print "$deps\n";
}' ./Makefile)"

#collect includes
(    echo '#define __KERNEL__'
   echo '#define MODULE'
   echo
   echo '#include <linux/kconfig.h>'
   for i in $flist
   do
      echo -e "\n// ${i}"
      grep --include='*.c' -hPe "$include" "$i"
   done
) | tee includes.COLLECTED | $gcc_preprocess -o includes.PREPROCESSED -

#preprocess
(   echo '#include "includes.COLLECTED"'
   cat $flist | grep -vPe "$include"
) | tee sources.MERGED | $gcc_preprocess -o - - |
#split
perl -e '
my $ready = 0;
while (<>) {
   if ( $ready eq 0 && m/^# 2 "<stdin>" 2$/) {
      $ready = 1;
      $_ = qq(#include "includes.PREPROCESSED"\n);
   }
   if ($ready eq 1) { print; }
}'  > ./sources.PREPROCESSED

