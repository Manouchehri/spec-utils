#!/usr/bin/env perl

# Full of partial preprocessing of kernel module source code.
# Copyright (C) <2018> Denis Efremov <efremov@ispras.ru>, ISP RAS
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

use warnings;
use strict;

use lib::abs '../lib';

package TS {

   use MooseX::App::Simple qw(Color);

   use Kernel::Module qw(prepare_module_sources preprocess_module_sources);
   use C::Util::Transformation;

   option 'preprocess' => (
      is            => 'ro',
      isa           => 'Bool',
      cmd_aliases   => [qw(p)],
      documentation => 'switches on full preprocessing of module sources'
   );

   option 'kernel' => (
      is            => 'ro',
      isa           => 'Str',
      required      => 1,
      cmd_env       => 'CURRENT_KERNEL',
      cmd_aliases   => [qw(k kdir)],
      documentation => 'kernel directory'
   );

   option 'module' => (
      is            => 'ro',
      isa           => 'Str',
      required      => 1,
      cmd_env       => 'CURRENT_PROJECT',
      cmd_aliases   => [qw(m mdir)],
      documentation => 'module directory'
   );

   option 'mname' => (
      is            => 'ro',
      isa           => 'Str',
      required      => 0,
      cmd_aliases   => [qw(mn)],
      documentation => 'module name (e.g. fat vfat msdos)'
   );

   option 'strings' => (
      is            => 'ro',
      isa           => 'Bool',
      default       => 0,
      documentation => 'remove strings; default: off'
   );

   option 'comments' => (
      is            => 'ro',
      isa           => 'Bool',
      default       => 1,
      documentation => 'remove comments; default: on'
   );

   option 'macro' => (
      is            => 'ro',
      isa           => 'Bool',
      default       => 0,
      documentation => 'remove macro; default: off'
   );

   option 'attributes' => (
      is            => 'ro',
      isa           => 'Bool',
      default       => 1,
      documentation => 'remove attributes; default: on'
   );

   sub run
   {
      my ($self) = @_;

      die "Please, provide valid path to kernel.\n"
        unless -d $self->kernel;
      die "Please, provide valid path to module.\n"
        unless -d $self->module;

      my $func = $self->preprocess ? \&preprocess_module_sources : \&prepare_module_sources;
      my $source = ($func->($self->kernel, $self->module, $self->mname, ["#define SPECIFICATION 1\n"]))[1];

      {
         my %param;
         $param{$_} = $self->$_ foreach qw/strings comments macro attributes/;
         adapt($$source, %param);
      }

      print $$source;
   }

   1;
}

TS->new_with_options->run();

