#!/usr/bin/env perl

# Program for counting specifications lines.
# Copyright (C) <2018> Denis Efremov <efremov@ispras.ru>, ISP RAS
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

use v5.20;
use feature qw/say/;
use strict;
use warnings;

use utf8::all;
use Getopt::Long;

use lib::abs '../lib';
use C::AcslcommentSet;
use Kernel::Module qw/preprocess_module_sources/;
use C::Util::Transformation;

my ($kernel, $module) = @ENV{qw/CURRENT_KERNEL CURRENT_PROJECT/};
my $exact_module = undef;

GetOptions(
   "kernel|k=s" => \$kernel,
   "module|m=s" => \$module,
   "mname=s"    => \$exact_module
) or die("Error in command line arguments\n");

die "Please, provide valid path to kernel.\n"
  unless -d $kernel;
die "Please, provide valid path to module.\n"
  unless -d $module;

#BEGIN OF A PROGRAM
my @comments;
my $source = (preprocess_module_sources($kernel, $module, $exact_module, ["#define SPECIFICATION 1\n"]))[1];
adapt($$source, comments => \@comments);
my $set = C::AcslcommentSet->parse(\@comments, 'module');

my $count = 0;
foreach (@{$set->set}) {
   $count += $_->number_of_lines();
}

say "Total number of specifications (in lines): $count";

##END OF A PROGRAM
