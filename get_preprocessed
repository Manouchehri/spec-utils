#!/usr/bin/perl

use warnings;
use strict;

use FindBin;
use lib "$FindBin::Bin/lib/";


package TS {

   use MooseX::App::Simple qw(Color Env);

   use Local::Kernel::Module qw(prepare_module_sources preprocess_module_sources);
   use Local::C::Transformation;

   option 'preprocess' => (
      is  => 'ro',
      isa => 'Bool',
      cmd_aliases => [qw(p)],
      documentation => 'switches on full preprocessing of module sources'
   );

   option 'kernel' => (
      is         => 'ro',
      isa        => 'Str',
      required   => 1,
      cmd_env    => 'CURRENT_KERNEL',
      cmd_aliases => [qw(k kdir)],
      documentation => 'kernel directory'
   );

   option 'module' => (
      is         => 'ro',
      isa        => 'Str',
      required   => 1,
      cmd_env    => 'CURRENT_PROJECT',
      cmd_aliases => [qw(m mdir)],
      documentation => 'module directory'
   );

   option 'strings' => (
      is         => 'ro',
      isa        => 'Bool',
      default    => 0,
      documentation => 'remove strings; default: off'
   );

   option 'comments' => (
      is         => 'ro',
      isa        => 'Bool',
      default    => 1,
      documentation => 'remove comments; default: on'
   );

   option 'macro' => (
      is         => 'ro',
      isa        => 'Bool',
      default    => 0,
      documentation => 'remove macro; default: off'
   );

   option 'attributes' => (
      is         => 'ro',
      isa        => 'Bool',
      default    => 1,
      documentation => 'remove attributes; default: on'
   );


   sub run {
      my ($self) = @_;
      my $func = $self->preprocess ? \&preprocess_module_sources : \&prepare_module_sources;

      my $source = ($func->($self->kernel, $self->module, ["#define SPECIFICATION 1\n"]))[1];

      {
         my %param;
         $param{$_} = $self->$_ foreach qw/strings comments macro attributes/;
         adapt($$source, %param);
      }

      print $$source
   }

   1;
}

TS->new_with_options->run();

